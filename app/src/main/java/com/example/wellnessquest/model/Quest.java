package com.example.wellnessquest.model;

import java.io.Serializable;
import java.util.List;

/**
 * Represents a quest in the WellnessQuest application.
 * A quest can belong to either the "Fitness" or "Mind" category and provides coins as a reward upon completion.
 * It also supports image tagging via ML for validation based on provided valid tags.
 *
 * @author Mena Nasir
 */
public class Quest implements Serializable {

    private String id; // Id for every quest
    private String title; // Title of the quest
    private String description; // Text that describes the objective of the quest
    private String category; // "Fitness" or "Mind"
    private boolean isCompleted; // Check if quest is completed or not
    private int coins; // Coins generated by completing quest
    private List<String> validTags; // Tags that are used to match against ml-kit generated tags for the image sent in by user

    /**
     * Constructs a new Quest.
     *
     * @param id          Unique identifier for the quest
     * @param title       Title of the quest
     * @param description Description of the quest's objective
     * @param category    Category of the quest ("Fitness" or "Mind")
     * @param isCompleted Whether the quest is completed
     * @param coins       Number of coins rewarded upon completion
     * @param validTags   List of valid tags for ML-kit verification
     */
    public Quest(String id, String title, String description, String category, boolean isCompleted, int coins, List<String> validTags) {
        this.id = id;
        this.title = title;
        this.description = description;
        this.category = category;
        this.isCompleted = isCompleted;
        this.coins = coins;
        this.validTags = validTags;
    }

    /** @return the quest's unique identifier */
    public String getId() {
        return id;
    }

    /** @return the list of valid tags for ML verification */
    public List<String> getValidTags() {
        return validTags;
    }

    /** @return the title of the quest */
    public String getTitle() {
        return title;
    }

    /** @return the description of the quest */
    public String getDescription() {
        return description;
    }

    /** @return the category of the quest ("Fitness" or "Mind") */
    public String getCategory() {
        return category;
    }

    /** @return true if the quest is completed, false otherwise */
    public boolean isCompleted() {
        return isCompleted;
    }

    /** @return the number of coins rewarded upon completion */
    public int getCoins() {
        return coins;
    }

    /**
     * Sets a new ID for the quest.
     * @param id the new identifier
     */
    public void setId(String id) {
        this.id = id;
    }


    /**
     * Sets a new title for the quest.
     * @param title the title to set
     */
    public void setTitle(String title) {
        this.title = title;
    }


    /**
     * Sets a new description for the quest.
     * @param description the description to set
     */
    public void setDescription(String description) {
        this.description = description;
    }


    /**
     * Sets the category of the quest.
     * @param category the new category ("Fitness" or "Mind")
     */
    public void setCategory(String category) {
        this.category = category;
    }


    /**
     * Sets the completion status of the quest.
     * @param completed true if completed, false otherwise
     */
    public void setCompleted(boolean completed) {
        isCompleted = completed;
    }


    /**
     * Sets the amount of coins rewarded by the quest.
     * @param coins number of coins
     */
    public void setCoins(int coins) {
        this.coins = coins;
    }


    /**
     * @return true if the quest is completed, false otherwise
     */
    public boolean isComplete() {
        return isCompleted;
    }

    /**
     * @return the amount of coins rewarded for this quest
     */
    public int getRewardCoins() {
        return coins;
    }


}